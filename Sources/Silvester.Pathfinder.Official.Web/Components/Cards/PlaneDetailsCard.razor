@using Silvester.Pathfinder.Official.Web.Shared.Preferences;
@using Silvester.Pathfinder.Official.Web.Shared.Cards;
@using Silvester.Pathfinder.Official.Web.Shared.Tables;
@using Silvester.Pathfinder.Official.Web.Services;
@using Silvester.Pathfinder.Official.Web.Shared.Chips;

@if (Plane != null)
{
    <ComponentDetailsCard TEntity="IGetPlaneById_Planes_Items" Entity="@Plane">
        <Title>
            <MudText Typo="Typo.h6">Plane</MudText>
        </Title>
        <Actions>
        </Actions>
        <LeftContent>
            <PreferenceCategory Title="Details">
                <PreferenceItemText Title="Name" Text="@context.Name" />
                <MudDivider />
            </PreferenceCategory>

            <PreferenceCategory Title="Characteristics">
                <PreferenceItemChips Title="Category">
                    <Chips>
                        <TraitChip OnClick="@(() => OnCategoryClick())" Text="@context.Category.Name" />
                    </Chips>
                </PreferenceItemChips>
                <MudDivider />
                <PreferenceItemChips Title="Alignment"><Chips><TraitChip OnClick="@(() => OnAlignmentClick())" Text="@context.Alignment.Name" /></Chips></PreferenceItemChips>
                @if(context.Traits.Count != 0)
                {
                    <MudDivider />
                    <PreferenceItemChips Title="Traits">
                        <Chips>
                            @foreach (var trait in context.Traits)
                            {
                                <TraitChip OnClick="@(() => OnPlaneTraitClick(trait.Id))" Text="@trait.Name" />
                            }
                        </Chips>
                    </PreferenceItemChips>
                }
            </PreferenceCategory>
        </LeftContent>
        <RightContent>
            <PreferenceCategory Title="Description">
                <PreferenceItemTextBlocks TextBlocks="@context.Details" />
            </PreferenceCategory>
        </RightContent>
    </ComponentDetailsCard>
}

@code {
    [Parameter]
    public IGetPlaneById_Planes_Items Plane { get; set; } = default!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    public void OnCategoryClick()
    {
        NavigationManager.NavigateTo($"plane-categories/{Plane.Category.Id}");
    }

    public void OnAlignmentClick()
    {
        NavigationManager.NavigateTo($"alignments/{Plane.Alignment.Id}");
    }

    public void OnPlaneTraitClick(Guid id)
    {
        NavigationManager.NavigateTo($"traits/{id}");
    }
}