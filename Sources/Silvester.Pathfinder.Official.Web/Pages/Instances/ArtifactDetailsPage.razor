@using Silvester.Pathfinder.Official.Web.Shared.Layout;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Planes;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Planes.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Deities;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Deities.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Cards;
@using Silvester.Pathfinder.Official.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@page "/artifacts/{artifactId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        <MudPaper Style="margin: 20px">
            <ArtifactDetailsCard Entity="@Artifact" />
        </MudPaper>

        @if (Artifact != null && (string.IsNullOrEmpty(Artifact.Destruction) == false || Artifact.DestructionEffects.Any()))
        {
            <MudPaper Style="margin: 20px">
                <ArtifactDestructionDetailsCard Entity="@Artifact" />
            </MudPaper>
        }

        @if (Artifact != null && Artifact.Actions.Any())
        {
            @foreach (IArtifactById_Action action in Artifact.Actions)
            {
                <MudPaper Style="margin: 20px">
                    <ArtifactActionDetailsCard Entity="@action" />
                </MudPaper>
            }
        }

    </PageLayout>
</div>

@code {
    protected override string Title => "Artifact";
    protected override string? Subtitle => Artifact?.Name;

    [Parameter]
    public Guid ArtifactId { get; set; }

    private IArtifactById? Artifact { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        StoreSession = PathfinderOfficialApi.GetArtifactById
            .Watch(ArtifactId)
            .Select(e => e.Data?.Artifacts?.Items?.FirstOrDefault())
            .Subscribe(alignment =>
            {
                Artifact = alignment;
                StateHasChanged();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}