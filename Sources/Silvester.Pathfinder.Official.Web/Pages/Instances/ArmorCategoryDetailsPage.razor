@using Silvester.Pathfinder.Official.Web.Shared.Layout;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Armors;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Armors.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Cards;
@using Silvester.Pathfinder.Official.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@page "/armor-categories/{armorCategoryId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        @if (ArmorCategory != null)
        {
            <MudPaper Style="margin: 20px">
                <ArmorCategoryDetailsCard Entity="@ArmorCategory" />
            </MudPaper>

            <MudPaper Style="margin: 20px">
                <ArmorsTable PageProvider="@(new ArmorPageWithCategoryProvider(PathfinderOfficialApi, ArmorCategoryId))" />
            </MudPaper>
        }
    </PageLayout>
</div>

@code {
    protected override string Title => "Armor Categories";
    protected override string? Subtitle => ArmorCategory?.Name;

    [Parameter]
    public Guid ArmorCategoryId { get; set; }

    private IGetArmorCategoryById_ArmorCategories_Items? ArmorCategory { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        StoreSession = PathfinderOfficialApi.GetArmorCategoryById
            .Watch(ArmorCategoryId, StrawberryShake.ExecutionStrategy.NetworkOnly)
            .Select(e => e.Data?.ArmorCategories?.Items?.FirstOrDefault())
            .Subscribe(deityCategory =>
            {
                ArmorCategory = deityCategory;
                StateHasChanged();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}