@using Silvester.Pathfinder.Official.Web.Shared.Preferences;
@using Silvester.Pathfinder.Official.Web.Shared.Cards;
@using Silvester.Pathfinder.Official.Web.Shared.Tables;

<div>
    @if (Alignment == null)
    {

    }
    else
    {
    <RelationshipTable TEntity="IAlignmentById_Plane" DefaultSortLabel="@nameof(IAlignmentById_Plane.Name)" Filter="@PlaneFilter" InspectionUrl="@((e) => $"planes/{e.Id}")" Items="@(() => Alignment.Planes)">
        <Columns>
            <MudTh><MudTableSortLabel SortLabel="@nameof(IAlignmentById_Plane.Name)" T="IAlignmentById_Plane" InitialDirection="SortDirection.Ascending">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="@(nameof(IAlignmentById_Plane.Category) + nameof(IAlignmentById_Plane_Category.Name) )" T="IAlignmentById_Plane">Category</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="@nameof(IAlignmentById_Plane.Description)" T="IAlignmentById_Plane">Description</MudTableSortLabel></MudTh>
        </Columns>
        <Rows>
            <MudTd Style="font-weight: 500;">@context.Name</MudTd>
            <MudTd>@context.Category.Name</MudTd>
            <MudTdEllipsized Text="@context.Description" />
        </Rows>
    </RelationshipTable>
    }
</div>

@code
{
    [Parameter]
    public IAlignmentById Alignment { get; set; } = default!;

    public bool PlaneFilter(IAlignmentById_Plane plane, string searchString)
    {
        return plane.Name.ToLower().Contains(searchString)
            || plane.Description.ToLower().Contains(searchString);
    }
}