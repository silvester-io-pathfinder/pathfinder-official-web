@using Silvester.Pathfinder.Official.Web.Shared.Tables.Builder
@using Silvester.Pathfinder.Official.Web.Shared.Tables
@using Silvester.Pathfinder.Official.Web.Graphql

<div>
    <GraphqlTable Model="@GetModel()" GetPage="@GetPage" TSortInput="LanguageSortInput" TEntity="ILanguagesPage" />
</div>

@code {
    [Inject]
    public PathfinderOfficialApi PathfinderOfficialApi { get; set; } = default!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    public TableModel<ILanguagesPage> GetModel()
    {
        return new TableBuilder<ILanguagesPage>()
        {
            Title = "Languages",
        }
        .AddTextColumn(e => e.Name, "Name", nameof(ILanguagesPage.Name), true)
        .AddTextColumn(e => e.Type.Name, "Type", nameof(ILanguagesPage.Type) + "." + nameof(ILanguagesPage_Type.Name))
        .AddInspectColumn(NavigationManager, e => $"language-types/{e.Id}")
        .Build();
    }

    public async Task<TableData<ILanguagesPage>> GetPage(LanguageSortInput[] sortInputs, TableState state, string searchTerm)
    {
        IOperationResult<IGetLanguagesPageResult> result = await PathfinderOfficialApi.GetLanguagesPage
            .ExecuteAsync(state.Page * state.PageSize, state.PageSize, searchTerm, sortInputs);

        TableData<ILanguagesPage> page = new TableData<ILanguagesPage>()
        {
            TotalItems = result.Data!.Languages!.TotalCount,
            Items = result.Data!.Languages!.Items!
        };

        return page;
    }
}