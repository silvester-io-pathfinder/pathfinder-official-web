@using Silvester.Pathfinder.Official.Web.Shared.Preferences;
@using Silvester.Pathfinder.Official.Web.Shared.Cards;
@using Silvester.Pathfinder.Official.Web.Shared.Tables;
@using Silvester.Pathfinder.Official.Web.Pages.Traits.Details.Components;

<div>
    @if (DeityCategory == null)
    {

    }
    else
    {
    <RelationshipTable TEntity="IGetDeityCategoryById_DeityCategories_Items_Deities" DefaultSortLabel="@nameof(IGetDeityCategoryById_DeityCategories_Items_Deities.Name)" Filter="@DeityFilter" InspectionUrl="@((e) => $"deities/{e.Id}")" Items="@(() => DeityCategory.Deities)">
        <Columns>
            <MudTh><MudTableSortLabel SortLabel="@nameof(IGetDeityCategoryById_DeityCategories_Items_Deities.Name)" T="IGetDeityCategoryById_DeityCategories_Items_Deities" InitialDirection="SortDirection.Ascending">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="@nameof(IGetDeityCategoryById_DeityCategories_Items_Deities.Description)" T="IGetDeityCategoryById_DeityCategories_Items_Deities">Description</MudTableSortLabel></MudTh>
        </Columns>
        <Rows>
            <MudTd Style="font-weight: 500;">@context.Name</MudTd>
            <MudTdEllipsized Text="@context.Description" />
        </Rows>
    </RelationshipTable>
    }
</div>

@code
{
    [Parameter]
    public IGetDeityCategoryById_DeityCategories_Items DeityCategory { get; set; } = default!;

    public bool DeityFilter(IGetDeityCategoryById_DeityCategories_Items_Deities deity, string searchString)
    {
        return deity.Name.ToLower().Contains(searchString)
            || deity.Description.ToLower().Contains(searchString);
    }
}