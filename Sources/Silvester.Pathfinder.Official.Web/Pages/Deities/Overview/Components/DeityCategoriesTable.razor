@using Silvester.Pathfinder.Official.Web.Shared.Tables.Builder
@using Silvester.Pathfinder.Official.Web.Shared.Tables
@using Silvester.Pathfinder.Official.Web.Graphql

<div>
    <GraphqlTable Model="@GetModel()" GetPage="@GetPage" TSortInput="DeityCategorySortInput" TEntity="IDeityCategoriesPage" />
</div>

@code {
    [Inject]
    public PathfinderOfficialApi PathfinderOfficialApi { get; set; } = default!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    public TableModel<IDeityCategoriesPage> GetModel()
    {
        return new TableBuilder<IDeityCategoriesPage>()
        .AddTextColumn(e => e.Name, "Name", nameof(IDeitiesPage.Name), true)
        .AddTextColumn(e => e.Description, "Description", nameof(IPlanesPage.Description))
        .AddInspectColumn(NavigationManager, e => $"deity-categories/{e.Id}")
        .Build();
    }

    public async Task<TableData<IDeityCategoriesPage>> GetPage(DeityCategorySortInput[] sortInputs, TableState state, string searchTerm)
    {
        IOperationResult<IGetDeityCategoriesPageResult> result = await PathfinderOfficialApi.GetDeityCategoriesPage
            .ExecuteAsync(state.Page * state.PageSize, state.PageSize, searchTerm, sortInputs);

        TableData<IDeityCategoriesPage> page = new TableData<IDeityCategoriesPage>()
        {
            TotalItems = result.Data!.DeityCategories!.TotalCount,
            Items = result.Data!.DeityCategories!.Items!
        };

        return page;
    }
}