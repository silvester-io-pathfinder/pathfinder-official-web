@using Silvester.Pathfinder.Official.Web.Shared.Tables
@using Silvester.Pathfinder.Official.Web.Graphql
@using Silvester.Pathfinder.Official.Web.Services

<div>
    <GraphqlTable Title="Spells" RowsPerPage="25" GetPage="@GetPage" TSortInput="SpellSortInput" TEntity="IGetSpellsPage_Spells_Items">
        <Columns>
            <MudTh><MudTableSortLabel SortLabel="@(nameof(IGetSpellsPage_Spells_Items.ActionType)  + ".Name")" T="IGetSpellsPage_Spells_Items">Action</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="@nameof(IGetSpellsPage_Spells_Items.Name)" T="IGetSpellsPage_Spells_Items">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="@nameof(IGetSpellsPage_Spells_Items.Level)" T="IGetSpellsPage_Spells_Items">Level</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="@(nameof(IGetSpellsPage_Spells_Items.SavingThrowStat)+".Name")" T="IGetSpellsPage_Spells_Items">Saving Throw</MudTableSortLabel></MudTh>
            <MudTh></MudTh>
        </Columns>
        <Rows>
            <MudTd><div style="vertical-align: middle; height: 24px;">@((MarkupString) ActionTypeService.GetActionTypeIcon(context.ActionType!.Name))</div></MudTd>
            <MudTd Style="font-weight: 500;">@context.Name</MudTd>
            <MudTd>@context.Level</MudTd>
            <MudTdEllipsized Text="@context.SavingThrowStat?.Name" />
            <MudTh>
                <MudTooltip Text="Inspect">
                    <MudIconButton Size="Size.Small" OnClick="@(() => OnInspectClicked(context))" Icon="@Icons.Material.Outlined.ArrowForward"></MudIconButton>
                </MudTooltip>
            </MudTh>
        </Rows>
    </GraphqlTable>
</div>

@code {
    [Inject]
    public PathfinderOfficialApi PathfinderOfficialApi { get; set; } = default!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    [Inject]
    public IActionTypeService ActionTypeService { get; set; } = default!;

    public void OnInspectClicked(IGetSpellsPage_Spells_Items spell)
    {
        NavigationManager.NavigateTo($"spells/{spell.Id}");
    }

    public async Task<TableData<IGetSpellsPage_Spells_Items>> GetPage(SpellSortInput[] sortInputs, TableState state, string searchTerm)
    {
        IOperationResult<IGetSpellsPageResult> result = await PathfinderOfficialApi.GetSpellsPage
            .ExecuteAsync(state.Page * state.PageSize, state.PageSize, searchTerm, sortInputs);

        TableData<IGetSpellsPage_Spells_Items> page = new TableData<IGetSpellsPage_Spells_Items>()
        {
            TotalItems = result.Data!.Spells!.TotalCount,
            Items = result.Data!.Spells!.Items!
        };

        return page;
    }
}